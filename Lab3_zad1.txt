using System;
using System.Collections.Generic;

// Zadanie 1a
class Person
{
    private string firstName;
    private string lastName;
    private int age;

    public string FirstName => firstName;  
    public string LastName => lastName;
    public int Age => age;

    public Person(string firstName, string lastName, int age)
    {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
    }

    public virtual void View()
    {
        Console.WriteLine($"{FirstName} {LastName}, wiek: {Age}");
    }
}

class Book
{
    protected string title;
    protected Person author;
    protected int releaseYear;

    public string Title => title;  

    public Book(string title, Person author, int releaseYear)
    {
        this.title = title;
        this.author = author;
        this.releaseYear = releaseYear;
    }

    public virtual void View()
    {
        Console.WriteLine($"Tytuł: {Title}, Autor: {author.FirstName} {author.LastName}, Rok: {releaseYear}");
    }
}
// Zadanie 1b-1e
class Reader : Person
{
    protected List<Book> readBooks = new List<Book>();  

    public IEnumerable<Book> ReadBooks => readBooks; 

    public Reader(string firstName, string lastName, int age) : base(firstName, lastName, age) { }

    public void AddBook(Book book)
    {
        readBooks.Add(book);
    }

    public void ViewBook()
    {
        Console.WriteLine($"{FirstName} przeczytał:");
        foreach (var book in readBooks)
        {
            Console.WriteLine($"- {book.Title}");
        }
    }

    public override void View()
    {
        base.View();
        ViewBook();
    }
}
// Zadanie 1f
class Reviewer : Reader
{
    private static Random random = new Random();

    public Reviewer(string firstName, string lastName, int age) : base(firstName, lastName, age) { }

    public override void View()
    {
        base.View();
        foreach (var book in ReadBooks)  
        {
            Console.WriteLine($"- {book.Title}: Ocena {random.Next(1, 10)}");
        }
    }
}

// Zadanie 1i, 1j
class AdventureBook : Book
{
    protected string Setting;

    public AdventureBook(string title, Person author, int releaseYear, string setting)
        : base(title, author, releaseYear)
    {
        Setting = setting;
    }

    public override void View()
    {
        base.View();
        Console.WriteLine($"Sceneria: {Setting}");
    }
}

class DocumentaryBook : Book
{
    protected string Topic;

    public DocumentaryBook(string title, Person author, int releaseYear, string topic)
        : base(title, author, releaseYear)
    {
        Topic = topic;
    }

    public override void View()
    {
        base.View();
        Console.WriteLine($"Tematyka: {Topic}");
    }
}

class ProgramZadanie1
{
    static void Main()
    {
        List<Person> osoby = new List<Person>();

        Person author = new Person("Adam", "Mickiewicz", 56);
        Book book1 = new Book("Pan Tadeusz", author, 1834);
        AdventureBook book2 = new AdventureBook("W pustyni i w puszczy", new Person("Henryk", "Sienkiewicz", 68), 1911, "Afryka");
        DocumentaryBook book3 = new DocumentaryBook("Historia Polski", new Person("Jan", "Kowal", 50), 2000, "Historia");

        Reader reader1 = new Reader("Jan", "Kowalski", 25);
        reader1.AddBook(book1);
        reader1.AddBook(book2);
        reader1.AddBook(book3);

        Reviewer reviewer1 = new Reviewer("Anna", "Nowak", 30);
        reviewer1.AddBook(book1);
        reviewer1.AddBook(book2);

        osoby.Add(reader1);
        osoby.Add(reviewer1);

        foreach (var osoba in osoby)
        {
            osoba.View();
        }
    }
}